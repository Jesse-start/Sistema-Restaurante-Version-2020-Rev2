'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.1
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.1.
'
Namespace FacturaSI
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TimbradoPortBinding", [Namespace]:="http://main.facturasi.com/")>  _
    Partial Public Class Timbrado
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private timbradoCFDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validaNominasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaCFDIPorFolioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private timbradoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private timbradoNominasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private timbradoTXTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaInfoCFDIsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validaCFDIsHonorariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validaCFDIsNominaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private translateTXTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private cancelacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaCFDIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WebService_Facturasi.My.MySettings.Default.WebService_Facturasi_FacturaSI_Timbrado
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event timbradoCFDCompleted As timbradoCFDCompletedEventHandler
        
        '''<remarks/>
        Public Event validaNominasCompleted As validaNominasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaCFDIPorFolioCompleted As consultaCFDIPorFolioCompletedEventHandler
        
        '''<remarks/>
        Public Event timbradoCompleted As timbradoCompletedEventHandler
        
        '''<remarks/>
        Public Event timbradoNominasCompleted As timbradoNominasCompletedEventHandler
        
        '''<remarks/>
        Public Event timbradoTXTCompleted As timbradoTXTCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaInfoCFDIsCompleted As consultaInfoCFDIsCompletedEventHandler
        
        '''<remarks/>
        Public Event validaCFDIsHonorariosCompleted As validaCFDIsHonorariosCompletedEventHandler
        
        '''<remarks/>
        Public Event validaCFDIsNominaCompleted As validaCFDIsNominaCompletedEventHandler
        
        '''<remarks/>
        Public Event translateTXTCompleted As translateTXTCompletedEventHandler
        
        '''<remarks/>
        Public Event cancelacionCompleted As cancelacionCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaCFDICompleted As consultaCFDICompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function timbradoCFD(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal cfd As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal passKey As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("timbradoCFD", New Object() {usuario, password, cfd, passKey})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub timbradoCFDAsync(ByVal usuario As String, ByVal password As String, ByVal cfd As String, ByVal passKey As String)
            Me.timbradoCFDAsync(usuario, password, cfd, passKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub timbradoCFDAsync(ByVal usuario As String, ByVal password As String, ByVal cfd As String, ByVal passKey As String, ByVal userState As Object)
            If (Me.timbradoCFDOperationCompleted Is Nothing) Then
                Me.timbradoCFDOperationCompleted = AddressOf Me.OntimbradoCFDOperationCompleted
            End If
            Me.InvokeAsync("timbradoCFD", New Object() {usuario, password, cfd, passKey}, Me.timbradoCFDOperationCompleted, userState)
        End Sub
        
        Private Sub OntimbradoCFDOperationCompleted(ByVal arg As Object)
            If (Not (Me.timbradoCFDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent timbradoCFDCompleted(Me, New timbradoCFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validaNominas(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal xls As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Boolean
            Dim results() As Object = Me.Invoke("validaNominas", New Object() {usuario, password, xls})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validaNominasAsync(ByVal usuario As String, ByVal password As String, ByVal xls As String)
            Me.validaNominasAsync(usuario, password, xls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validaNominasAsync(ByVal usuario As String, ByVal password As String, ByVal xls As String, ByVal userState As Object)
            If (Me.validaNominasOperationCompleted Is Nothing) Then
                Me.validaNominasOperationCompleted = AddressOf Me.OnvalidaNominasOperationCompleted
            End If
            Me.InvokeAsync("validaNominas", New Object() {usuario, password, xls}, Me.validaNominasOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidaNominasOperationCompleted(ByVal arg As Object)
            If (Not (Me.validaNominasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validaNominasCompleted(Me, New validaNominasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaCFDIPorFolio(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal rfc As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal folio As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal serie As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("consultaCFDIPorFolio", New Object() {usuario, password, rfc, folio, serie})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaCFDIPorFolioAsync(ByVal usuario As String, ByVal password As String, ByVal rfc As String, ByVal folio As String, ByVal serie As String)
            Me.consultaCFDIPorFolioAsync(usuario, password, rfc, folio, serie, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaCFDIPorFolioAsync(ByVal usuario As String, ByVal password As String, ByVal rfc As String, ByVal folio As String, ByVal serie As String, ByVal userState As Object)
            If (Me.consultaCFDIPorFolioOperationCompleted Is Nothing) Then
                Me.consultaCFDIPorFolioOperationCompleted = AddressOf Me.OnconsultaCFDIPorFolioOperationCompleted
            End If
            Me.InvokeAsync("consultaCFDIPorFolio", New Object() {usuario, password, rfc, folio, serie}, Me.consultaCFDIPorFolioOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaCFDIPorFolioOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaCFDIPorFolioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaCFDIPorFolioCompleted(Me, New consultaCFDIPorFolioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function timbrado(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal cfdi As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("timbrado", New Object() {usuario, password, cfdi})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub timbradoAsync(ByVal usuario As String, ByVal password As String, ByVal cfdi As String)
            Me.timbradoAsync(usuario, password, cfdi, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub timbradoAsync(ByVal usuario As String, ByVal password As String, ByVal cfdi As String, ByVal userState As Object)
            If (Me.timbradoOperationCompleted Is Nothing) Then
                Me.timbradoOperationCompleted = AddressOf Me.OntimbradoOperationCompleted
            End If
            Me.InvokeAsync("timbrado", New Object() {usuario, password, cfdi}, Me.timbradoOperationCompleted, userState)
        End Sub
        
        Private Sub OntimbradoOperationCompleted(ByVal arg As Object)
            If (Not (Me.timbradoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent timbradoCompleted(Me, New timbradoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function timbradoNominas(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal xls As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Boolean
            Dim results() As Object = Me.Invoke("timbradoNominas", New Object() {usuario, password, xls})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub timbradoNominasAsync(ByVal usuario As String, ByVal password As String, ByVal xls As String)
            Me.timbradoNominasAsync(usuario, password, xls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub timbradoNominasAsync(ByVal usuario As String, ByVal password As String, ByVal xls As String, ByVal userState As Object)
            If (Me.timbradoNominasOperationCompleted Is Nothing) Then
                Me.timbradoNominasOperationCompleted = AddressOf Me.OntimbradoNominasOperationCompleted
            End If
            Me.InvokeAsync("timbradoNominas", New Object() {usuario, password, xls}, Me.timbradoNominasOperationCompleted, userState)
        End Sub
        
        Private Sub OntimbradoNominasOperationCompleted(ByVal arg As Object)
            If (Not (Me.timbradoNominasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent timbradoNominasCompleted(Me, New timbradoNominasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function timbradoTXT(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal txt As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal passKey As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("timbradoTXT", New Object() {usuario, password, txt, passKey})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub timbradoTXTAsync(ByVal usuario As String, ByVal password As String, ByVal txt As String, ByVal passKey As String)
            Me.timbradoTXTAsync(usuario, password, txt, passKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub timbradoTXTAsync(ByVal usuario As String, ByVal password As String, ByVal txt As String, ByVal passKey As String, ByVal userState As Object)
            If (Me.timbradoTXTOperationCompleted Is Nothing) Then
                Me.timbradoTXTOperationCompleted = AddressOf Me.OntimbradoTXTOperationCompleted
            End If
            Me.InvokeAsync("timbradoTXT", New Object() {usuario, password, txt, passKey}, Me.timbradoTXTOperationCompleted, userState)
        End Sub
        
        Private Sub OntimbradoTXTOperationCompleted(ByVal arg As Object)
            If (Not (Me.timbradoTXTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent timbradoTXTCompleted(Me, New timbradoTXTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaInfoCFDIs(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal rfc As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal desde As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal desdeSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal hasta As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal hastaSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> InfoCFDI()
            Dim results() As Object = Me.Invoke("consultaInfoCFDIs", New Object() {usuario, password, rfc, desde, desdeSpecified, hasta, hastaSpecified})
            Return CType(results(0),InfoCFDI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaInfoCFDIsAsync(ByVal usuario As String, ByVal password As String, ByVal rfc As String, ByVal desde As Date, ByVal desdeSpecified As Boolean, ByVal hasta As Date, ByVal hastaSpecified As Boolean)
            Me.consultaInfoCFDIsAsync(usuario, password, rfc, desde, desdeSpecified, hasta, hastaSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaInfoCFDIsAsync(ByVal usuario As String, ByVal password As String, ByVal rfc As String, ByVal desde As Date, ByVal desdeSpecified As Boolean, ByVal hasta As Date, ByVal hastaSpecified As Boolean, ByVal userState As Object)
            If (Me.consultaInfoCFDIsOperationCompleted Is Nothing) Then
                Me.consultaInfoCFDIsOperationCompleted = AddressOf Me.OnconsultaInfoCFDIsOperationCompleted
            End If
            Me.InvokeAsync("consultaInfoCFDIs", New Object() {usuario, password, rfc, desde, desdeSpecified, hasta, hastaSpecified}, Me.consultaInfoCFDIsOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaInfoCFDIsOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaInfoCFDIsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaInfoCFDIsCompleted(Me, New consultaInfoCFDIsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validaCFDIsHonorarios(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute("uuids", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal uuids() As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> InfoCFDI()
            Dim results() As Object = Me.Invoke("validaCFDIsHonorarios", New Object() {usuario, password, uuids})
            Return CType(results(0),InfoCFDI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub validaCFDIsHonorariosAsync(ByVal usuario As String, ByVal password As String, ByVal uuids() As String)
            Me.validaCFDIsHonorariosAsync(usuario, password, uuids, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validaCFDIsHonorariosAsync(ByVal usuario As String, ByVal password As String, ByVal uuids() As String, ByVal userState As Object)
            If (Me.validaCFDIsHonorariosOperationCompleted Is Nothing) Then
                Me.validaCFDIsHonorariosOperationCompleted = AddressOf Me.OnvalidaCFDIsHonorariosOperationCompleted
            End If
            Me.InvokeAsync("validaCFDIsHonorarios", New Object() {usuario, password, uuids}, Me.validaCFDIsHonorariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidaCFDIsHonorariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.validaCFDIsHonorariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validaCFDIsHonorariosCompleted(Me, New validaCFDIsHonorariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validaCFDIsNomina(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute("uuids", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal uuids() As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> InfoCFDI()
            Dim results() As Object = Me.Invoke("validaCFDIsNomina", New Object() {usuario, password, uuids})
            Return CType(results(0),InfoCFDI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub validaCFDIsNominaAsync(ByVal usuario As String, ByVal password As String, ByVal uuids() As String)
            Me.validaCFDIsNominaAsync(usuario, password, uuids, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validaCFDIsNominaAsync(ByVal usuario As String, ByVal password As String, ByVal uuids() As String, ByVal userState As Object)
            If (Me.validaCFDIsNominaOperationCompleted Is Nothing) Then
                Me.validaCFDIsNominaOperationCompleted = AddressOf Me.OnvalidaCFDIsNominaOperationCompleted
            End If
            Me.InvokeAsync("validaCFDIsNomina", New Object() {usuario, password, uuids}, Me.validaCFDIsNominaOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidaCFDIsNominaOperationCompleted(ByVal arg As Object)
            If (Not (Me.validaCFDIsNominaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validaCFDIsNominaCompleted(Me, New validaCFDIsNominaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function translateTXT(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal cadenaVer As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal txt As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("translateTXT", New Object() {cadenaVer, txt})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub translateTXTAsync(ByVal cadenaVer As String, ByVal txt As String)
            Me.translateTXTAsync(cadenaVer, txt, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub translateTXTAsync(ByVal cadenaVer As String, ByVal txt As String, ByVal userState As Object)
            If (Me.translateTXTOperationCompleted Is Nothing) Then
                Me.translateTXTOperationCompleted = AddressOf Me.OntranslateTXTOperationCompleted
            End If
            Me.InvokeAsync("translateTXT", New Object() {cadenaVer, txt}, Me.translateTXTOperationCompleted, userState)
        End Sub
        
        Private Sub OntranslateTXTOperationCompleted(ByVal arg As Object)
            If (Not (Me.translateTXTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent translateTXTCompleted(Me, New translateTXTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cancelacion(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal rfc As String, <System.Xml.Serialization.XmlElementAttribute("uuids", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal uuids() As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal cer As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal key As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal passKey As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("cancelacion", New Object() {usuario, password, rfc, uuids, cer, key, passKey})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cancelacionAsync(ByVal usuario As String, ByVal password As String, ByVal rfc As String, ByVal uuids() As String, ByVal cer As String, ByVal key As String, ByVal passKey As String)
            Me.cancelacionAsync(usuario, password, rfc, uuids, cer, key, passKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cancelacionAsync(ByVal usuario As String, ByVal password As String, ByVal rfc As String, ByVal uuids() As String, ByVal cer As String, ByVal key As String, ByVal passKey As String, ByVal userState As Object)
            If (Me.cancelacionOperationCompleted Is Nothing) Then
                Me.cancelacionOperationCompleted = AddressOf Me.OncancelacionOperationCompleted
            End If
            Me.InvokeAsync("cancelacion", New Object() {usuario, password, rfc, uuids, cer, key, passKey}, Me.cancelacionOperationCompleted, userState)
        End Sub
        
        Private Sub OncancelacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.cancelacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cancelacionCompleted(Me, New cancelacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://main.facturasi.com/", ResponseNamespace:="http://main.facturasi.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaCFDI(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal uuid As String) As <System.Xml.Serialization.XmlElementAttribute("return", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("consultaCFDI", New Object() {usuario, password, uuid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaCFDIAsync(ByVal usuario As String, ByVal password As String, ByVal uuid As String)
            Me.consultaCFDIAsync(usuario, password, uuid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaCFDIAsync(ByVal usuario As String, ByVal password As String, ByVal uuid As String, ByVal userState As Object)
            If (Me.consultaCFDIOperationCompleted Is Nothing) Then
                Me.consultaCFDIOperationCompleted = AddressOf Me.OnconsultaCFDIOperationCompleted
            End If
            Me.InvokeAsync("consultaCFDI", New Object() {usuario, password, uuid}, Me.consultaCFDIOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaCFDIOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaCFDICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaCFDICompleted(Me, New consultaCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://timbrado.cfdi32.pac/")>  _
    Partial Public Class InfoCFDI
        
        Private uUIDField As String
        
        Private folioField As String
        
        Private serieField As String
        
        Private fechaTimbradoField As String
        
        Private estadoField As String
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property UUID() As String
            Get
                Return Me.uUIDField
            End Get
            Set
                Me.uUIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property folio() As String
            Get
                Return Me.folioField
            End Get
            Set
                Me.folioField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property serie() As String
            Get
                Return Me.serieField
            End Get
            Set
                Me.serieField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property fechaTimbrado() As String
            Get
                Return Me.fechaTimbradoField
            End Get
            Set
                Me.fechaTimbradoField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property estado() As String
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub timbradoCFDCompletedEventHandler(ByVal sender As Object, ByVal e As timbradoCFDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class timbradoCFDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub validaNominasCompletedEventHandler(ByVal sender As Object, ByVal e As validaNominasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validaNominasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub consultaCFDIPorFolioCompletedEventHandler(ByVal sender As Object, ByVal e As consultaCFDIPorFolioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaCFDIPorFolioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub timbradoCompletedEventHandler(ByVal sender As Object, ByVal e As timbradoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class timbradoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub timbradoNominasCompletedEventHandler(ByVal sender As Object, ByVal e As timbradoNominasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class timbradoNominasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub timbradoTXTCompletedEventHandler(ByVal sender As Object, ByVal e As timbradoTXTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class timbradoTXTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub consultaInfoCFDIsCompletedEventHandler(ByVal sender As Object, ByVal e As consultaInfoCFDIsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaInfoCFDIsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InfoCFDI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InfoCFDI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub validaCFDIsHonorariosCompletedEventHandler(ByVal sender As Object, ByVal e As validaCFDIsHonorariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validaCFDIsHonorariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InfoCFDI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InfoCFDI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub validaCFDIsNominaCompletedEventHandler(ByVal sender As Object, ByVal e As validaCFDIsNominaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validaCFDIsNominaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InfoCFDI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InfoCFDI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub translateTXTCompletedEventHandler(ByVal sender As Object, ByVal e As translateTXTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class translateTXTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub cancelacionCompletedEventHandler(ByVal sender As Object, ByVal e As cancelacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cancelacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub consultaCFDICompletedEventHandler(ByVal sender As Object, ByVal e As consultaCFDICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaCFDICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
